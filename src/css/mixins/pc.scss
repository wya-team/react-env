// btn

/**
 * @DateTime  2018-01-11
 * 通用按钮
 * @param     {[type]}    $bgColor           [description]
 * @param     {[type]}    $hoverBg           [description]
 * @param     {[type]}    $color             [description]
 * @param     {[type]}    $hoverColor:$color [description]
 * @return    {[type]}                       [description]
 */
@mixin pcBtnBase($bgColor, $hoverBg, $color, $hoverColor:$color) {
	display: inline-block;
	padding: 0 $pc-btn-pd-lr / $scale;
	height: $pc-btn-height / $scale;
	line-height: $pc-btn-height / $scale;
	border-radius: $pc-btn-radius / $scale;
	background: $bgColor;
	color: $color;
	text-align: center;
	border: none;
	box-sizing: border-box;
	cursor: pointer;
	font-size: $pc-btn-font-size / $scale;
	&:hover {
		background: $hoverBg;
		color: $hoverColor;
	}
	&:active {
		background: darken($hoverBg, 5%);
	}
}

/**
 * @DateTime  2018-01-12
 * 线性按钮
 * @param     {[type]}    $gradient          [description]
 * @param     {[type]}    $bgColor           [description]
 * @param     {[type]}    $hoverBgStart      [description]
 * @param     {[type]}    $hoverBgEnd        [description]
 * @param     {[type]}    $color             [description]
 * @param     {[type]}    $hoverColor:$color [description]
 * @return    {[type]}                       [description]
 */
@mixin pcBtnLineBase($gradient, $bgColor, $hoverBgStart, $hoverBgEnd, $color, $hoverColor:$color) {
	display: inline-block;
	padding: 0 $pc-btn-pd-lr / $scale;
	height: $pc-btn-height / $scale;
	line-height: $pc-btn-height - 2 / $scale;
	border-radius: $pc-btn-radius / $scale;
	background: $bgColor;
	color: $color;
	text-align: center;
	box-sizing: border-box;
	cursor: pointer;
	font-size: $pc-btn-font-size / $scale;
	border: 1px solid $border-color;
	&:hover {
		@include commonBgLinear($gradient, $hoverBgStart, $hoverBgEnd);
		color: $hoverColor;
	}
	&:active {
		@include commonBgLinear($gradient,  darken($hoverBgStart, 5%),  darken($hoverBgEnd, 5%));
	}
}

/**
 * @DateTime  2018-01-11
 * 渐变颜色按钮
 * @param     {[type]}    $bgColorStart      [description]
 * @param     {[type]}    $bgColorEnd        [description]
 * @param     {[type]}    $hoverBgStart      [description]
 * @param     {[type]}    $hoverBgEnd        [description]
 * @param     {[type]}    $color             [description]
 * @param     {[type]}    $hoverColor:$color [description]
 * @return    {[type]}                       [description]
 */
@mixin pcBtnGradientBase($gradient, $bgColorStart, $bgColorEnd, $hoverBgStart, $hoverBgEnd, $color, $hoverColor:$color) {
	display: inline-block;
	padding: 0 $pc-btn-pd-lr / $scale;
	height: $pc-btn-height / $scale;
	line-height: $pc-btn-height / $scale;
	border-radius: $pc-btn-radius / $scale;
	color: $color;
	text-align: center;
	border: none;
	box-sizing: border-box;
	cursor: pointer;
	font-size: $pc-btn-font-size / $scale;
	@include commonBgLinear($gradient, $bgColorStart, $bgColorEnd);
	&:hover {
		@include commonBgLinear($gradient, $hoverBgStart, $hoverBgEnd);
		color: $hoverColor;
	}
	&:active {
		@include commonBgLinear($gradient, darken($hoverBgStart, 5%), darken($hoverBgEnd, 5%));
	}
}

/**
 * 通用表格
 */
@mixin pcTableBase($text-align: left, $padding: 20px, $radius: 4px) {
	overflow-x: auto;
	background: $white;
	position: relative;
	padding: $padding / $scale;
	border-collapse: collapse;
	width: 100%;
	text-align: $text-align;
	border-radius: $radius / $scale;
	thead {
		th {
			background: $pc-table-bar;
			font-size: $pc-table-font-size / $scale;
			font-weight: normal;
			vertical-align: middle;
			white-space: nowrap;
			padding: ($pc-table-tr-height - $pc-table-line-height) / 2 / $scale  $padding-md / $scale;
		}
	}
	tbody {
		td {
			line-height: $pc-table-line-height;
			padding: ($pc-table-tr-height - $pc-table-line-height) / 2 / $scale $padding-md / $scale;
			@include commonBorder(b, $pc-table-border);
			&:after {
				content: "";
				display: block;
				clear: both;
				height: 0;
				font-size: 0;
				visibility: hidden;
			}

		}
		tr.__hover:hover {
			background: $pc-table-hover;
		}
	}
}
